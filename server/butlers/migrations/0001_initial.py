# Generated by Django 5.2.4 on 2025-09-27 18:47

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cars', '0012_remove_car_buttler_price_remove_car_is_buttler_and_more'),
        ('users', '0003_pointtransaction_description'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ButlerCoupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(editable=False, max_length=20, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('brand_ids', models.JSONField(blank=True, default=list, verbose_name='Brand IDs')),
                ('model_ids', models.JSONField(blank=True, default=list, verbose_name='Model IDs')),
                ('car_ids', models.JSONField(blank=True, default=list, verbose_name='Car IDs')),
                ('discount_type', models.CharField(choices=[('PERCENTAGE', 'Percentage'), ('FIXED', 'Fixed'), ('FREE', 'Free')], default='PERCENTAGE', max_length=20)),
                ('discount_rate', models.IntegerField(blank=True, null=True, verbose_name='Discount Rate')),
                ('max_discount', models.IntegerField(default=1000000000, verbose_name='Max Discount Amount')),
                ('discount', models.IntegerField(blank=True, null=True, verbose_name='Discount Amount')),
                ('min_price', models.IntegerField(default=0, verbose_name='Min Buttler Price')),
                ('max_price', models.IntegerField(default=1000000000, verbose_name='Max Buttler Price')),
                ('usage_limit', models.IntegerField(default=1, verbose_name='Usage Limit')),
                ('usage_limit_per_user', models.IntegerField(default=1, verbose_name='Usage Limit Per User')),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Valid From')),
                ('valid_to', models.DateTimeField(verbose_name='Valid To')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Coupon',
                'verbose_name_plural': 'Coupons',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ButlerModelRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('model', models.TextField(verbose_name='Model')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_model_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Model Request',
                'verbose_name_plural': 'Model Requests',
            },
        ),
        migrations.CreateModel(
            name='ButlerRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_at', models.DateTimeField(blank=True, null=True, verbose_name='Start At')),
                ('start_location', models.CharField(max_length=255, verbose_name='Start Location')),
                ('end_at', models.DateTimeField(blank=True, null=True, verbose_name='End At')),
                ('end_location', models.CharField(max_length=255, verbose_name='End Location')),
                ('payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_requests', to='cars.car')),
                ('point', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='butler_requests', to='users.pointtransaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Butler Request',
                'verbose_name_plural': 'Butler Requests',
            },
        ),
        migrations.CreateModel(
            name='Butler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butlers', to='butlers.butlerrequest')),
            ],
            options={
                'verbose_name': 'Butler',
                'verbose_name_plural': 'Butlers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ButlerReview',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_reviews', to='cars.model')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Reviews',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ButlerUserCoupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_user_coupons', to='butlers.butlercoupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_user_coupons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Butler User Coupon',
                'verbose_name_plural': 'Butler User Coupons',
            },
        ),
        migrations.AddField(
            model_name='butlerrequest',
            name='coupon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='butler_requests', to='butlers.butlerusercoupon'),
        ),
        migrations.CreateModel(
            name='ButlerWayPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('scheduled_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('butler_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_way_points', to='butlers.butlerrequest')),
            ],
            options={
                'verbose_name': 'Butler Way Point',
                'verbose_name_plural': 'Butler Way Points',
            },
        ),
        migrations.CreateModel(
            name='ButlerLike',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_likes', to='cars.model')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
                'unique_together': {('model', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ButlerReviewLike',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_review_likes', to='butlers.butlerreview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='butler_review_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review Like',
                'verbose_name_plural': 'Review Likes',
                'unique_together': {('review', 'user')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='butlerrequest',
            unique_together={('user', 'coupon'), ('user', 'point')},
        ),
    ]
